<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>